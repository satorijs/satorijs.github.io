import{_ as r,y as i,aa as a,p as l,X as o,z as e,l as n,R as s,j as u}from"./chunks/framework.CIYb0pjC.js";const x=JSON.parse('{"title":"登录信息 (Login)","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/resources/login.md","filePath":"zh-CN/resources/login.md"}'),g={name:"zh-CN/resources/login.md"},p={tabindex:"0"},f={class:"route"};function b(m,t,h,q,N,k){const d=s("badge");return u(),i("div",null,[t[23]||(t[23]=a('<h1 id="登录信息" tabindex="-1">登录信息 (Login) <a class="header-anchor" href="#登录信息" aria-label="Permalink to &quot;登录信息 (Login)&quot;">​</a></h1><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><h3 id="def-login" tabindex="-1">Login <a class="header-anchor" href="#def-login" aria-label="Permalink to &quot;Login {#def-login}&quot;">​</a></h3>',3)),l("table",p,[t[19]||(t[19]=l("thead",null,[l("tr",null,[l("th",null,"字段"),l("th",null,"类型"),l("th",null,"描述")])],-1)),l("tbody",null,[l("tr",null,[t[4]||(t[4]=l("td",null,"sn",-1)),t[5]||(t[5]=l("td",null,"number",-1)),l("td",null,[t[1]||(t[1]=o("序列号")),t[2]||(t[2]=l("sup",null,[l("a",{href:"#login-sn"},"[1]")],-1)),t[3]||(t[3]=o()),e(d,{type:"warning"},{default:n(()=>t[0]||(t[0]=[o("实验性")])),_:1})])]),t[16]||(t[16]=l("tr",null,[l("td",null,"platform"),l("td",null,[o("string?"),l("sup",null,[l("a",{href:"#login-nullable"},"[3]")])]),l("td",null,"平台名称")],-1)),t[17]||(t[17]=l("tr",null,[l("td",null,"user"),l("td",null,[l("a",{href:"./user.html"},"User"),o("?"),l("sup",null,[l("a",{href:"#login-nullable"},"[3]")])]),l("td",null,[o("用户对象"),l("sup",null,[l("a",{href:"#login-user"},"[2]")])])],-1)),t[18]||(t[18]=l("tr",null,[l("td",null,"status"),l("td",null,[l("a",{href:"#def-login-status"},"LoginStatus")]),l("td",null,"登录状态")],-1)),l("tr",null,[t[9]||(t[9]=l("td",null,"adapter",-1)),t[10]||(t[10]=l("td",null,"string",-1)),l("td",null,[t[7]||(t[7]=l("a",{href:"./../advanced/internal.html#platform-vs-adapter"},"适配器名称",-1)),t[8]||(t[8]=o()),e(d,{type:"warning"},{default:n(()=>t[6]||(t[6]=[o("实验性")])),_:1})])]),l("tr",null,[t[14]||(t[14]=l("td",null,"features",-1)),t[15]||(t[15]=l("td",null,"string[]?",-1)),l("td",null,[t[12]||(t[12]=l("a",{href:"./../protocol/api.html#platform-features"},"平台特性",-1)),t[13]||(t[13]=o(" 列表 ")),e(d,{type:"warning"},{default:n(()=>t[11]||(t[11]=[o("实验性")])),_:1})])])])]),t[24]||(t[24]=a('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p id="login-sn">[1] <code>login.sn</code> 仅用于标识 Login 对象，与平台逻辑无关 (意味着任何平台相关的 API 调用都不需要传入这个 <code>sn</code>)，也不进行持久化 (意味着两次连接中同一个登录号的 <code>sn</code> 可能是不同的，不同登录号的 <code>sn</code> 可能是相同的)。请尤其注意与 <code>login.user.id</code> 区分。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p id="login-user">[2] <code>login.user</code> 并不一定是真实存在的平台用户，也可以是平台分配的机器人或者应用身份。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p id="login-nullable">[3] 当 <code>login.status</code> 不为 <code>ONLINE</code> 时，<code>platform</code> 和 <code>user</code> 可能为空。但实际上，所有的非登录事件中均确保 <code>login</code> 处于 <code>ONLINE</code> 状态，因此 <code>platform</code> 和 <code>user</code> 总是有值的。从 SDK 开发的角度，为登录事件和非登录事件提供不同的类型是比较好的做法。</p></div><h3 id="#def-login-status" tabindex="-1">LoginStatus <a class="header-anchor" href="##def-login-status" aria-label="Permalink to &quot;LoginStatus {##def-login-status}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>OFFLINE</td><td>0</td><td>离线</td></tr><tr><td>ONLINE</td><td>1</td><td>在线</td></tr><tr><td>CONNECT</td><td>2</td><td>正在连接</td></tr><tr><td>DISCONNECT</td><td>3</td><td>正在断开连接</td></tr><tr><td>RECONNECT</td><td>4</td><td>正在重新连接</td></tr></tbody></table><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="api-login-get" tabindex="-1">获取登录信息 <a class="header-anchor" href="#api-login-get" aria-label="Permalink to &quot;获取登录信息 {#api-login-get}&quot;">​</a></h3>',7)),l("blockquote",f,[e(d,null,{default:n(()=>t[20]||(t[20]=[o("POST")])),_:1}),t[21]||(t[21]=o()),t[22]||(t[22]=l("code",null,"/login.get",-1))]),t[25]||(t[25]=a('<p>获取登录信息。返回一个 <a href="#def-login"><code>Login</code></a> 对象。</p><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="login-added" tabindex="-1">login-added <a class="header-anchor" href="#login-added" aria-label="Permalink to &quot;login-added&quot;">​</a></h3><p>登录被创建时触发。必需资源：<a href="#def-login"><code>login</code></a>。</p><h3 id="login-removed" tabindex="-1">login-removed <a class="header-anchor" href="#login-removed" aria-label="Permalink to &quot;login-removed&quot;">​</a></h3><p>登录被删除时触发。必需资源：<a href="#def-login"><code>login</code></a>。</p><h3 id="login-updated" tabindex="-1">login-updated <a class="header-anchor" href="#login-updated" aria-label="Permalink to &quot;login-updated&quot;">​</a></h3><p>登录信息更新时触发。必需资源：<a href="#def-login"><code>login</code></a>。</p>',8))])}const v=r(g,[["render",b]]);export{x as __pageData,v as default};
