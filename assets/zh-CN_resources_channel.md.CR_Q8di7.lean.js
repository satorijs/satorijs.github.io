import{_ as h,y as o,aa as r,p as e,z as n,l,X as d,R as i,j as s}from"./chunks/framework.CIYb0pjC.js";const S=JSON.parse('{"title":"频道 (Channel)","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/resources/channel.md","filePath":"zh-CN/resources/channel.md"}'),u={name:"zh-CN/resources/channel.md"},b={class:"route"},p={class:"route"},f={class:"route"},m={class:"route"},q={class:"route"},y={id:"api-channel-mute",tabindex:"-1"},x={class:"route"},g={class:"route"};function P(C,t,k,I,T,D){const a=i("badge");return s(),o("div",null,[t[25]||(t[25]=r('<h1 id="频道" tabindex="-1">频道 (Channel) <a class="header-anchor" href="#频道" aria-label="Permalink to &quot;频道 (Channel)&quot;">​</a></h1><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><h3 id="def-channel" tabindex="-1">Channel <a class="header-anchor" href="#def-channel" aria-label="Permalink to &quot;Channel {#def-channel}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>频道 ID</td></tr><tr><td>type</td><td><a href="#def-channel-type">ChannelType</a></td><td>频道类型</td></tr><tr><td>name</td><td>string?</td><td>频道名称</td></tr><tr><td>parent_id</td><td>string?</td><td>父频道 ID</td></tr></tbody></table><h3 id="def-channel-type" tabindex="-1">ChannelType <a class="header-anchor" href="#def-channel-type" aria-label="Permalink to &quot;ChannelType {#def-channel-type}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>TEXT</td><td>0</td><td>文本频道</td></tr><tr><td>DIRECT</td><td>1</td><td>私聊频道</td></tr><tr><td>CATEGORY</td><td>2</td><td>分类频道</td></tr><tr><td>VOICE</td><td>3</td><td>语音频道</td></tr></tbody></table><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="api-channel-get" tabindex="-1">获取群组频道 <a class="header-anchor" href="#api-channel-get" aria-label="Permalink to &quot;获取群组频道 {#api-channel-get}&quot;">​</a></h3>',8)),e("blockquote",b,[n(a,null,{default:l(()=>t[0]||(t[0]=[d("POST")])),_:1}),t[1]||(t[1]=d()),t[2]||(t[2]=e("code",null,"/channel.get",-1))]),t[26]||(t[26]=r('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr></tbody></table><p>根据 ID 获取频道。返回一个 <a href="#def-channel">Channel</a> 对象。</p><h3 id="api-channel-list" tabindex="-1">获取群组频道列表 <a class="header-anchor" href="#api-channel-list" aria-label="Permalink to &quot;获取群组频道列表 {#api-channel-list}&quot;">​</a></h3>',3)),e("blockquote",p,[n(a,null,{default:l(()=>t[3]||(t[3]=[d("POST")])),_:1}),t[4]||(t[4]=d()),t[5]||(t[5]=e("code",null,"/channel.list",-1))]),t[27]||(t[27]=r('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>群组 ID</td></tr><tr><td>next</td><td>string?</td><td>分页令牌</td></tr></tbody></table><p>获取群组中的全部频道。返回一个 <a href="#def-channel">Channel</a> 的 <a href="./../protocol/api.html#list">分页列表</a>。</p><h3 id="api-channel-create" tabindex="-1">创建群组频道 <a class="header-anchor" href="#api-channel-create" aria-label="Permalink to &quot;创建群组频道 {#api-channel-create}&quot;">​</a></h3>',3)),e("blockquote",f,[n(a,null,{default:l(()=>t[6]||(t[6]=[d("POST")])),_:1}),t[7]||(t[7]=d()),t[8]||(t[8]=e("code",null,"/channel.create",-1))]),t[28]||(t[28]=r('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>群组 ID</td></tr><tr><td>data</td><td><a href="#channel">Channel</a></td><td>频道数据</td></tr></tbody></table><p>创建群组频道。返回一个 <a href="#def-channel">Channel</a> 对象。</p><h3 id="api-channel-update" tabindex="-1">修改群组频道 <a class="header-anchor" href="#api-channel-update" aria-label="Permalink to &quot;修改群组频道 {#api-channel-update}&quot;">​</a></h3>',3)),e("blockquote",m,[n(a,null,{default:l(()=>t[9]||(t[9]=[d("POST")])),_:1}),t[10]||(t[10]=d()),t[11]||(t[11]=e("code",null,"/channel.update",-1))]),t[29]||(t[29]=r('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>data</td><td><a href="#def-channel">Channel</a></td><td>频道数据</td></tr></tbody></table><p>修改群组频道。</p><h3 id="api-channel-delete" tabindex="-1">删除群组频道 <a class="header-anchor" href="#api-channel-delete" aria-label="Permalink to &quot;删除群组频道 {#api-channel-delete}&quot;">​</a></h3>',3)),e("blockquote",q,[n(a,null,{default:l(()=>t[12]||(t[12]=[d("POST")])),_:1}),t[13]||(t[13]=d()),t[14]||(t[14]=e("code",null,"/channel.delete",-1))]),t[30]||(t[30]=e("table",{tabindex:"0"},[e("thead",null,[e("tr",null,[e("th",null,"字段"),e("th",null,"类型"),e("th",null,"描述")])]),e("tbody",null,[e("tr",null,[e("td",null,"channel_id"),e("td",null,"string"),e("td",null,"频道 ID")])])],-1)),t[31]||(t[31]=e("p",null,"删除群组频道。",-1)),e("h3",y,[t[16]||(t[16]=d("禁言群组频道 ")),n(a,{type:"warning"},{default:l(()=>t[15]||(t[15]=[d("实验性")])),_:1}),t[17]||(t[17]=d()),t[18]||(t[18]=e("a",{class:"header-anchor",href:"#api-channel-mute","aria-label":'Permalink to "禁言群组频道 <badge type="warning">实验性</badge> {#api-channel-mute}"'},"​",-1))]),e("blockquote",x,[n(a,null,{default:l(()=>t[19]||(t[19]=[d("POST")])),_:1}),t[20]||(t[20]=d()),t[21]||(t[21]=e("code",null,"/channel.mute",-1))]),t[32]||(t[32]=r('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>duration</td><td>number</td><td>禁言时长 (毫秒)</td></tr></tbody></table><p>禁言群组频道。如果传入的禁言时长为 <code>0</code> 则表示解除禁言。</p><h3 id="api-user-channel-create" tabindex="-1">创建私聊频道 <a class="header-anchor" href="#api-user-channel-create" aria-label="Permalink to &quot;创建私聊频道 {#api-user-channel-create}&quot;">​</a></h3>',3)),e("blockquote",g,[n(a,null,{default:l(()=>t[22]||(t[22]=[d("POST")])),_:1}),t[23]||(t[23]=d()),t[24]||(t[24]=e("code",null,"/user.channel.create",-1))]),t[33]||(t[33]=r('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>user_id</td><td>string</td><td>用户 ID</td></tr><tr><td>guild_id</td><td>string?</td><td>群组 ID</td></tr></tbody></table><p>创建一个私聊频道。返回一个 <a href="#def-channel">Channel</a> 对象。</p>',2))])}const N=h(u,[["render",P]]);export{S as __pageData,N as default};
