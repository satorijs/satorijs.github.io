import{_ as u,y as o,aa as i,p as d,z as a,l,X as t,R as m,j as s}from"./chunks/framework.CIYb0pjC.js";const I=JSON.parse('{"title":"Guild Member","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/resources/member.md","filePath":"en-US/resources/member.md"}'),n={name:"en-US/resources/member.md"},b={class:"route"},h={class:"route"},g={class:"route"},p={id:"api-guild-member-mute",tabindex:"-1"},f={class:"route"},q={class:"route"};function k(P,e,x,v,G,T){const r=m("badge");return s(),o("div",null,[e[19]||(e[19]=i('<h1 id="guild-member" tabindex="-1">Guild Member <a class="header-anchor" href="#guild-member" aria-label="Permalink to &quot;Guild Member&quot;">​</a></h1><h2 id="definitions" tabindex="-1">Definitions <a class="header-anchor" href="#definitions" aria-label="Permalink to &quot;Definitions&quot;">​</a></h2><h3 id="def-guild-member" tabindex="-1">GuildMember <a class="header-anchor" href="#def-guild-member" aria-label="Permalink to &quot;GuildMember {#def-guild-member}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>FIELD</th><th>TYPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>user</td><td><a href="./user.html#def-user">User</a>?</td><td>user object</td></tr><tr><td>nick</td><td>string?</td><td>user&#39;s nickname in the guild</td></tr><tr><td>avatar</td><td>string?</td><td>user&#39;s avatar in the guild</td></tr><tr><td>joined_at</td><td>number?</td><td>join time</td></tr></tbody></table><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="api-guild-member-get" tabindex="-1">Get Guild Member <a class="header-anchor" href="#api-guild-member-get" aria-label="Permalink to &quot;Get Guild Member {#api-guild-member-get}&quot;">​</a></h3>',6)),d("blockquote",b,[a(r,null,{default:l(()=>e[0]||(e[0]=[t("POST")])),_:1}),e[1]||(e[1]=t()),e[2]||(e[2]=d("code",null,"/guild.member.get",-1))]),e[20]||(e[20]=i('<table tabindex="0"><thead><tr><th>FIELD</th><th>TYPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>guild id</td></tr><tr><td>user_id</td><td>string</td><td>user id</td></tr></tbody></table><p>Get guild member information. Returns a <a href="#def-guild-member">GuildMember</a> object.</p><h3 id="api-guild-member-list" tabindex="-1">Get Guild Member List <a class="header-anchor" href="#api-guild-member-list" aria-label="Permalink to &quot;Get Guild Member List {#api-guild-member-list}&quot;">​</a></h3>',3)),d("blockquote",h,[a(r,null,{default:l(()=>e[3]||(e[3]=[t("POST")])),_:1}),e[4]||(e[4]=t()),e[5]||(e[5]=d("code",null,"/guild.member.list",-1))]),e[21]||(e[21]=i('<table tabindex="0"><thead><tr><th>FIELD</th><th>TYPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>guild id</td></tr><tr><td>next</td><td>string?</td><td>pagination token</td></tr></tbody></table><p>Get all the members in a guild. Returns a <a href="./../protocol/api.html#list">paginated list</a> of <a href="#def-guild-member">GuildMember</a> objects.</p><h3 id="api-guild-member-kick" tabindex="-1">Kick Guild Member <a class="header-anchor" href="#api-guild-member-kick" aria-label="Permalink to &quot;Kick Guild Member {#api-guild-member-kick}&quot;">​</a></h3>',3)),d("blockquote",g,[a(r,null,{default:l(()=>e[6]||(e[6]=[t("POST")])),_:1}),e[7]||(e[7]=t()),e[8]||(e[8]=d("code",null,"/guild.member.kick",-1))]),e[22]||(e[22]=i('<table tabindex="0"><thead><tr><th>FIELD</th><th>TYPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>guild id</td></tr><tr><td>user_id</td><td>string</td><td>user id</td></tr><tr><td>permanent</td><td>boolean?</td><td>whether to permanently ban the user (preventing rejoin)</td></tr></tbody></table><p>Kick a user from the guild.</p>',2)),d("h3",p,[e[10]||(e[10]=t("Mute Guild Member ")),a(r,{type:"warning"},{default:l(()=>e[9]||(e[9]=[t("experimental")])),_:1}),e[11]||(e[11]=t()),e[12]||(e[12]=d("a",{class:"header-anchor",href:"#api-guild-member-mute","aria-label":'Permalink to "Mute Guild Member <badge type="warning">experimental</badge> {#api-guild-member-mute}"'},"​",-1))]),d("blockquote",f,[a(r,null,{default:l(()=>e[13]||(e[13]=[t("POST")])),_:1}),e[14]||(e[14]=t()),e[15]||(e[15]=d("code",null,"/guild.member.mute",-1))]),e[23]||(e[23]=i('<table tabindex="0"><thead><tr><th>FIELD</th><th>TYPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>guild id</td></tr><tr><td>user_id</td><td>string</td><td>user id</td></tr><tr><td>duration</td><td>number</td><td>mute duration (in milliseconds)</td></tr></tbody></table><p>Mute a user. If the duration is set to 0, it will unmute the user.</p><h3 id="api-guild-member-approve" tabindex="-1">Approve Guild Member Request <a class="header-anchor" href="#api-guild-member-approve" aria-label="Permalink to &quot;Approve Guild Member Request {#api-guild-member-approve}&quot;">​</a></h3>',3)),d("blockquote",q,[a(r,null,{default:l(()=>e[16]||(e[16]=[t("POST")])),_:1}),e[17]||(e[17]=t()),e[18]||(e[18]=d("code",null,"/guild.member.approve",-1))]),e[24]||(e[24]=i('<table tabindex="0"><thead><tr><th>FIELD</th><th>TYPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>message_id</td><td>string</td><td>request id</td></tr><tr><td>approve</td><td>boolean</td><td>whether to approve the request</td></tr><tr><td>comment</td><td>string?</td><td>comment</td></tr></tbody></table><p>Handle a guild join request.</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><h3 id="guild-member-added" tabindex="-1">guild-member-added <a class="header-anchor" href="#guild-member-added" aria-label="Permalink to &quot;guild-member-added&quot;">​</a></h3><p>Triggered when a guild member is added. Required resources: <a href="./guild.html#def-guild"><code>guild</code></a>, <a href="#def-guild-member"><code>member</code></a>, <a href="./user.html#def-user"><code>user</code></a>.</p><h3 id="guild-member-updated" tabindex="-1">guild-member-updated <a class="header-anchor" href="#guild-member-updated" aria-label="Permalink to &quot;guild-member-updated&quot;">​</a></h3><p>Triggered when guild member information is updated. Required resources: <a href="./guild.html#def-guild"><code>guild</code></a>, <a href="#def-guild-member"><code>member</code></a>, <a href="./user.html#def-user"><code>user</code></a>.</p><h3 id="guild-member-removed" tabindex="-1">guild-member-removed <a class="header-anchor" href="#guild-member-removed" aria-label="Permalink to &quot;guild-member-removed&quot;">​</a></h3><p>Triggered when a guild member is removed. Required resources: <a href="./guild.html#def-guild"><code>guild</code></a>, <a href="#def-guild-member"><code>member</code></a>, <a href="./user.html#def-user"><code>user</code></a>.</p><h3 id="guild-member-request" tabindex="-1">guild-member-request <a class="header-anchor" href="#guild-member-request" aria-label="Permalink to &quot;guild-member-request&quot;">​</a></h3><p>Triggered when a new guild join request is received. Required resources: <a href="./guild.html#def-guild"><code>guild</code></a>, <a href="#def-guild-member"><code>member</code></a>, <a href="./user.html#def-user"><code>user</code></a>.</p>',11))])}const M=u(n,[["render",k]]);export{I as __pageData,M as default};
