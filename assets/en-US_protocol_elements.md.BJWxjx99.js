import{_ as d,y as r,aa as a,p as e,X as s,z as n,l,R as h,j as o}from"./chunks/framework.CIYb0pjC.js";const E=JSON.parse('{"title":"Standard Elements","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/protocol/elements.md","filePath":"en-US/protocol/elements.md"}'),p={name:"en-US/protocol/elements.md"},k={tabindex:"0"},u={id:"button",tabindex:"-1"};function g(c,t,m,b,y,f){const i=h("badge");return o(),r("div",null,[t[17]||(t[17]=a('<h1 id="standard-elements" tabindex="-1">Standard Elements <a class="header-anchor" href="#standard-elements" aria-label="Permalink to &quot;Standard Elements&quot;">​</a></h1><h2 id="basic-elements" tabindex="-1">Basic Elements <a class="header-anchor" href="#basic-elements" aria-label="Permalink to &quot;Basic Elements&quot;">​</a></h2><p>Basic elements are the most common message elements. They can be displayed normally on most platforms and are the fundamental units of messages.</p><h3 id="at" tabindex="-1">Mention User (at) <a class="header-anchor" href="#at" aria-label="Permalink to &quot;Mention User (at) {#at}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>id</td><td>string?</td><td>S/R</td><td>target user id</td></tr><tr><td>name</td><td>string?</td><td>S/R</td><td>target user name</td></tr><tr><td>role</td><td>string?</td><td>S/R</td><td>target roke</td></tr><tr><td>type</td><td>string?</td><td>S/R</td><td>special operations, such as <code>all</code> for mentioning all members, <code>here</code> for mentioning online members</td></tr></tbody></table><p>The <code>&lt;at&gt;</code> element is used to mention a user or users.</p><h3 id="sharp" tabindex="-1">Mention Channel (sharp) <a class="header-anchor" href="#sharp" aria-label="Permalink to &quot;Mention Channel (sharp) {#sharp}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>S/R</td><td>target channel id</td></tr><tr><td>name</td><td>string?</td><td>S/R</td><td>target channel name</td></tr></tbody></table><p>The <code>&lt;sharp&gt;</code> element is used to mention a channel.</p><h3 id="a" tabindex="-1">Link (a) <a class="header-anchor" href="#a" aria-label="Permalink to &quot;Link (a) {#a}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>href</td><td>string</td><td>S/R</td><td>url of the link</td></tr></tbody></table><p>The <code>&lt;a&gt;</code> element is used to display a link. If the platform does not support links, it is recommended to display it in the form of content (href).</p><h2 id="resource-elements" tabindex="-1">Resource Elements <a class="header-anchor" href="#resource-elements" aria-label="Permalink to &quot;Resource Elements&quot;">​</a></h2><p>Resource message elements represent resource files in the text. Different platforms have significant differences in their support for resource files. When sending, only <code>src</code> needs to be provided. If a platform does not support a specific resource type, the adapter should replace it with <code>src</code>. If a platform does not support sending resource message elements and other message elements simultaneously, the adapter should send them in multiple messages.</p>',14)),e("table",k,[t[12]||(t[12]=e("thead",null,[e("tr",null,[e("th",null,"ATTRIBUTE"),e("th",null,"TYPE"),e("th",null,"SCOPE"),e("th",null,"DESCRIPTION")])],-1)),e("tbody",null,[t[10]||(t[10]=e("tr",null,[e("td",null,"src"),e("td",null,"string"),e("td",null,"S/R"),e("td",null,"url of the resource")],-1)),t[11]||(t[11]=e("tr",null,[e("td",null,"title"),e("td",null,"string?"),e("td",null,"S/R"),e("td",null,"name of the resource file")],-1)),e("tr",null,[e("td",null,[t[1]||(t[1]=s("cache ")),n(i,{type:"warning"},{default:l(()=>t[0]||(t[0]=[s("experimental")])),_:1})]),t[2]||(t[2]=e("td",null,"boolean?",-1)),t[3]||(t[3]=e("td",null,"S",-1)),t[4]||(t[4]=e("td",null,"whether to use cached files",-1))]),e("tr",null,[e("td",null,[t[6]||(t[6]=s("timeout ")),n(i,{type:"warning"},{default:l(()=>t[5]||(t[5]=[s("experimental")])),_:1})]),t[7]||(t[7]=e("td",null,"number?",-1)),t[8]||(t[8]=e("td",null,"S",-1)),t[9]||(t[9]=e("td",null,"maximum time to download the file (in milliseconds)",-1))])])]),t[18]||(t[18]=a(`<h3 id="img" tabindex="-1">Image (img) <a class="header-anchor" href="#img" aria-label="Permalink to &quot;Image (img) {#img}&quot;">​</a></h3><p>In addition to the common attributes above, the following attributes are supported:</p><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>width</td><td>number?</td><td>R</td><td>image width (in pixels)</td></tr><tr><td>height</td><td>number?</td><td>R</td><td>image width (in pixels)</td></tr></tbody></table><p>The <code>&lt;img&gt;</code> element is used to represent an image.</p><h3 id="audio" tabindex="-1">Audio (audio) <a class="header-anchor" href="#audio" aria-label="Permalink to &quot;Audio (audio) {#audio}&quot;">​</a></h3><p>In addition to the common attributes above, the following attributes are supported:</p><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>Attribute</td><td>number?</td><td>S/R</td><td>audio length (in seconds)</td></tr><tr><td>poster</td><td>string?</td><td>S/R</td><td>url of the audio cover</td></tr></tbody></table><p>The <code>&lt;audio&gt;</code> element is used to represent audio.</p><h3 id="video" tabindex="-1">Video (video) <a class="header-anchor" href="#video" aria-label="Permalink to &quot;Video (video) {#video}&quot;">​</a></h3><p>In addition to the common attributes above, the following attributes are supported:</p><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>width</td><td>number?</td><td>R</td><td>video width (in pixels)</td></tr><tr><td>height</td><td>number?</td><td>R</td><td>video width (in pixels)</td></tr><tr><td>Attribute</td><td>number?</td><td>S/R</td><td>video length (in seconds)</td></tr><tr><td>poster</td><td>string?</td><td>S/R</td><td>url of the video cover</td></tr></tbody></table><p>The <code>&lt;video&gt;</code> element is used to represent a video.</p><h3 id="file" tabindex="-1">File (file) <a class="header-anchor" href="#file" aria-label="Permalink to &quot;File (file) {#file}&quot;">​</a></h3><p>In addition to the common attributes above, the following attributes are supported:</p><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>poster</td><td>string?</td><td>S/R</td><td>url of the thumbnail</td></tr></tbody></table><p>The <code>&lt;file&gt;</code> element is used to represent a file.</p><h2 id="decorative-elements" tabindex="-1">Decorative Elements <a class="header-anchor" href="#decorative-elements" aria-label="Permalink to &quot;Decorative Elements&quot;">​</a></h2><p>Decorative elements are used to modify their content. If the corresponding platform does not support the element, the element itself can be ignored, and its child elements can be rendered normally.</p><h3 id="b" tabindex="-1">Bold (b, strong) <a class="header-anchor" href="#b" aria-label="Permalink to &quot;Bold (b, strong) {#b}&quot;">​</a></h3><p>The <code>&lt;b&gt;</code> or <code>&lt;strong&gt;</code> element is used to display its content in bold.</p><h3 id="i" tabindex="-1">Italic (i, em) <a class="header-anchor" href="#i" aria-label="Permalink to &quot;Italic (i, em) {#i}&quot;">​</a></h3><p>The <code>&lt;i&gt;</code> or <code>&lt;em&gt;</code> element is used to display its content in italics.</p><h3 id="u" tabindex="-1">Underline (u, ins) <a class="header-anchor" href="#u" aria-label="Permalink to &quot;Underline (u, ins) {#u}&quot;">​</a></h3><p>The <code>&lt;u&gt;</code> or <code>&lt;ins&gt;</code> element is used to underline its content.</p><h3 id="s" tabindex="-1">Strikethrough (s, del) <a class="header-anchor" href="#s" aria-label="Permalink to &quot;Strikethrough (s, del) {#s}&quot;">​</a></h3><p>The <code>&lt;s&gt;</code> or <code>&lt;del&gt;</code> element is used to strikethrough its content.</p><h3 id="spl" tabindex="-1">Spoiler (spl) <a class="header-anchor" href="#spl" aria-label="Permalink to &quot;Spoiler (spl) {#spl}&quot;">​</a></h3><p>The <code>&lt;spl&gt;</code> element is used to mark its content as a spoiler (hidden by default, revealed upon clicking).</p><h3 id="code" tabindex="-1">Code (code) <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code (code) {#code}&quot;">​</a></h3><p>The <code>&lt;code&gt;</code> element is used to display its content in a monospaced font (usually with a specific background color).</p><h3 id="sup" tabindex="-1">Superscript (sup) <a class="header-anchor" href="#sup" aria-label="Permalink to &quot;Superscript (sup) {#sup}&quot;">​</a></h3><p>The <code>&lt;sup&gt;</code> element is used to display its content as superscript.</p><h3 id="sub" tabindex="-1">Subscript (sub) <a class="header-anchor" href="#sub" aria-label="Permalink to &quot;Subscript (sub) {#sub}&quot;">​</a></h3><p>The <code>&lt;sub&gt;</code> element is used to display its content as subscript.</p><h2 id="layout-elements" tabindex="-1">Layout Elements <a class="header-anchor" href="#layout-elements" aria-label="Permalink to &quot;Layout Elements&quot;">​</a></h2><h3 id="br" tabindex="-1">Line Break (br) <a class="header-anchor" href="#br" aria-label="Permalink to &quot;Line Break (br) {#br}&quot;">​</a></h3><p>The <code>&lt;br&gt;</code> element represents an independent line break.</p><h3 id="p" tabindex="-1">Paragraph (p) <a class="header-anchor" href="#p" aria-label="Permalink to &quot;Paragraph (p) {#p}&quot;">​</a></h3><p>The <code>&lt;p&gt;</code> element represents a paragraph. When rendering, it ensures a line break between itself and adjacent elements.</p><h3 id="message" tabindex="-1">Message (message) <a class="header-anchor" href="#message" aria-label="Permalink to &quot;Message (message) {#message}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>id</td><td>string?</td><td>S</td><td>message id</td></tr><tr><td>forward</td><td>boolean?</td><td>S</td><td>whether it is a forwarded messasge</td></tr></tbody></table><p>The basic usage of the <code>&lt;message&gt;</code> element is to represent a message. Its child elements correspond to the message&#39;s content. If it has no child elements, the message will not be sent.</p><p>When a <code>&lt;message&gt;</code> element appears, the preceding elements are immediately treated as a message and sent. Therefore, the following two approaches are equivalent:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- First approach: Send two messages --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;hello&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;world&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- Second approach: Use an empty message to separate two pieces of text, but it still sends two messages --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">hello&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;world</span></span></code></pre></div><p>Some platforms allow you to simulate messages sent by other users:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">author</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;123123123&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Alice&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> avatar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  hello world</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>On platforms that support forwarding, you can use forward with the id attribute to forward a message:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;123456789&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> forward</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre></div><p>On platforms that support combined forwarding, you can use the <code>&lt;message&gt;</code> element with the forward attribute to nest other <code>&lt;message&gt;</code> elements for combined forwarding:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> forward</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;123456789&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;987654321&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- You can also nest simulated messages from other users in combined forwarding --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">author</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;123123123&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Alice&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> avatar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    hello world</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h2 id="meta-elements" tabindex="-1">Meta Elements <a class="header-anchor" href="#meta-elements" aria-label="Permalink to &quot;Meta Elements&quot;">​</a></h2><p>Meta elements are usually not rendered but affect the behavior of message sending.</p><h3 id="quote" tabindex="-1">Quote (quote) <a class="header-anchor" href="#quote" aria-label="Permalink to &quot;Quote (quote) {#quote}&quot;">​</a></h3><p>The <code>&lt;quote&gt;</code> element is used to represent a message quote. Its child elements will be rendered as the quoted content. In theory, all features of the <code>&lt;message&gt;</code> element can also be used in the <code>&lt;quote&gt;</code> element, including child elements (to construct quoted messages) and the forward attribute (to quote combined forwarding). However, currently, no platform seems to support this.</p><h3 id="author" tabindex="-1">Author (author) <a class="header-anchor" href="#author" aria-label="Permalink to &quot;Author (author) {#author}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>id</td><td>string?</td><td>S</td><td>user id</td></tr><tr><td>name</td><td>string?</td><td>S</td><td>user name</td></tr><tr><td>avatar</td><td>string?</td><td>S</td><td>avatar url</td></tr></tbody></table><p>The <code>&lt;author&gt;</code> element is used to represent the author of a message. Its child elements will be rendered as the author&#39;s name.</p><h2 id="interactive-elements" tabindex="-1">Interactive Elements <a class="header-anchor" href="#interactive-elements" aria-label="Permalink to &quot;Interactive Elements&quot;">​</a></h2><p>Interactive elements are used to display interactive content in messages. If the platform does not support such elements and cannot provide a fallback, the entire element can be ignored. The implementation should return messages with or without interactivity based on platform features.</p>`,59)),e("h3",u,[t[14]||(t[14]=s("Button (button) ")),n(i,{type:"warning"},{default:l(()=>t[13]||(t[13]=[s("experimental")])),_:1}),t[15]||(t[15]=s()),t[16]||(t[16]=e("a",{class:"header-anchor",href:"#button","aria-label":'Permalink to "Button (button) <badge type="warning">experimental</badge> {#button}"'},"​",-1))]),t[19]||(t[19]=a('<table tabindex="0"><thead><tr><th>ATTRIBUTE</th><th>TYPE</th><th>SCOPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>id</td><td>string?</td><td>S</td><td>button id</td></tr><tr><td>type</td><td>string?</td><td>S</td><td>button type</td></tr><tr><td>link</td><td>string?</td><td>S</td><td>button link</td></tr><tr><td>text</td><td>string?</td><td>S</td><td>text to input</td></tr><tr><td>theme</td><td>string?</td><td>S</td><td>button style</td></tr></tbody></table><p>The <code>&lt;button&gt;</code> element is used to represent a button. Its child elements will be rendered as the button&#39;s text.</p><p>Buttons currently support three different types:</p><ul><li>Clicking an <code>action</code> button triggers an <code>interaction/button</code> event, and the button resource of the event will contain the above <code>id</code>.</li><li>Clicking a <code>link</code> button opens a link, and the link&#39;s address is the above <code>href</code>.</li><li>Clicking an <code>input</code> button fills the user&#39;s input box with the above <code>text</code>.</li></ul><p><code>theme</code> is recommended to use only the following values:</p><ul><li>primary</li><li>secondary</li><li>success</li><li>warning</li><li>danger</li><li>info</li></ul>',6))])}const q=d(p,[["render",g]]);export{E as __pageData,q as default};
