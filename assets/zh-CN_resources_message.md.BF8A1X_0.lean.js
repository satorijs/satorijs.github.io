import{_ as l,y as i,aa as a,p as t,z as s,l as o,X as d,R as n,j as h}from"./chunks/framework.CIYb0pjC.js";const D=JSON.parse('{"title":"消息 (Message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/resources/message.md","filePath":"zh-CN/resources/message.md"}'),m={name:"zh-CN/resources/message.md"},u={class:"route"},g={class:"route"},c={class:"route"},b={class:"route"},f={class:"route"};function p(q,e,x,P,k,y){const r=n("badge");return h(),i("div",null,[e[15]||(e[15]=a('<h1 id="消息" tabindex="-1">消息 (Message) <a class="header-anchor" href="#消息" aria-label="Permalink to &quot;消息 (Message)&quot;">​</a></h1><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><h3 id="def-message" tabindex="-1">Message <a class="header-anchor" href="#def-message" aria-label="Permalink to &quot;Message {#def-message}&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>消息 ID</td></tr><tr><td>content</td><td>string</td><td>消息内容</td></tr><tr><td>channel</td><td><a href="./channel.html#def-channel">Channel</a>?</td><td>频道对象</td></tr><tr><td>guild</td><td><a href="./guild.html#def-guild">Guild</a>?</td><td>群组对象</td></tr><tr><td>member</td><td><a href="./member.html#def-member">Member</a>?</td><td>群组成员对象</td></tr><tr><td>user</td><td><a href="./user.html#def-user">User</a>?</td><td>用户对象</td></tr><tr><td>created_at</td><td>number?</td><td>消息发送的时间戳</td></tr><tr><td>updated_at</td><td>number?</td><td>消息修改的时间戳</td></tr></tbody></table><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="api-message-create" tabindex="-1">发送消息 <a class="header-anchor" href="#api-message-create" aria-label="Permalink to &quot;发送消息 {#api-message-create}&quot;">​</a></h3>',6)),t("blockquote",u,[s(r,null,{default:o(()=>e[0]||(e[0]=[d("POST")])),_:1}),e[1]||(e[1]=d()),e[2]||(e[2]=t("code",null,"/message.create",-1))]),e[16]||(e[16]=a('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>content</td><td>string</td><td>消息内容</td></tr></tbody></table><p>发送消息。返回一个 <a href="#def-message"><code>Message</code></a> 对象构成的数组。</p><h3 id="api-message-get" tabindex="-1">获取消息 <a class="header-anchor" href="#api-message-get" aria-label="Permalink to &quot;获取消息 {#api-message-get}&quot;">​</a></h3>',3)),t("blockquote",g,[s(r,null,{default:o(()=>e[3]||(e[3]=[d("POST")])),_:1}),e[4]||(e[4]=d()),e[5]||(e[5]=t("code",null,"/message.get",-1))]),e[17]||(e[17]=a('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>message_id</td><td>string</td><td>消息 ID</td></tr></tbody></table><p>获取特定消息。返回一个 <a href="#def-message"><code>Message</code></a> 对象。必需资源：<a href="./channel.html#def-channel"><code>channel</code></a>，<a href="./user.html#def-user"><code>user</code></a>。</p><h3 id="api-message-delete" tabindex="-1">撤回消息 <a class="header-anchor" href="#api-message-delete" aria-label="Permalink to &quot;撤回消息 {#api-message-delete}&quot;">​</a></h3>',3)),t("blockquote",c,[s(r,null,{default:o(()=>e[6]||(e[6]=[d("POST")])),_:1}),e[7]||(e[7]=d()),e[8]||(e[8]=t("code",null,"/message.delete",-1))]),e[18]||(e[18]=a('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>message_id</td><td>string</td><td>消息 ID</td></tr></tbody></table><p>撤回特定消息。</p><h3 id="api-message-update" tabindex="-1">编辑消息 <a class="header-anchor" href="#api-message-update" aria-label="Permalink to &quot;编辑消息 {#api-message-update}&quot;">​</a></h3>',3)),t("blockquote",b,[s(r,null,{default:o(()=>e[9]||(e[9]=[d("POST")])),_:1}),e[10]||(e[10]=d()),e[11]||(e[11]=t("code",null,"/message.update",-1))]),e[19]||(e[19]=a('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>message_id</td><td>string</td><td>消息 ID</td></tr><tr><td>content</td><td>string</td><td>消息内容</td></tr></tbody></table><p>编辑特定消息。</p><h3 id="api-message-list" tabindex="-1">获取消息列表 <a class="header-anchor" href="#api-message-list" aria-label="Permalink to &quot;获取消息列表 {#api-message-list}&quot;">​</a></h3>',3)),t("blockquote",f,[s(r,null,{default:o(()=>e[12]||(e[12]=[d("POST")])),_:1}),e[13]||(e[13]=d()),e[14]||(e[14]=t("code",null,"/message.list",-1))]),e[20]||(e[20]=a('<table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>next</td><td>string?</td><td>分页令牌</td></tr><tr><td>direction</td><td><a href="./../protocol/api.html#bidi-list">Direction</a>?</td><td>查询方向</td></tr><tr><td>limit</td><td>number?</td><td>消息数量限制</td></tr><tr><td>order</td><td><a href="./../protocol/api.html#bidi-list">Order</a>?</td><td>对结果排序</td></tr></tbody></table><p>获取频道消息列表。返回一个 <a href="#def-message"><code>Message</code></a> 的 <a href="./../protocol/api.html#bidi-list">双向分页列表</a>。必需资源：<a href="./user.html#def-user"><code>user</code></a>。</p><ul><li><code>next</code> 参数默认值为空，表示从最新消息开始查询。此时 <code>direction</code> 参数只能为 <code>before</code>。</li><li><code>direction</code> 参数默认为 <code>before</code>。</li><li><code>order</code> 参数默认为 <code>asc</code> (无论查询方向)。</li><li><code>limit</code> 参数的默认值与平台默认值保持一致。如果平台 API 没有设定默认值，则可以自行设定，推荐值为 50。如果用户传入值超出平台要求的上限，则应当改为使用平台的上限值，而不是返回错误。开发者应当使用返回值中 <code>prev</code> 或 <code>next</code> 的存在性判断是否有更多数据，而非依赖于返回值中 <code>data</code> 的长度。</li></ul><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="message-created" tabindex="-1">message-created <a class="header-anchor" href="#message-created" aria-label="Permalink to &quot;message-created&quot;">​</a></h3><p>当消息被创建时触发。必需资源：<a href="./channel.html#def-channel"><code>channel</code></a>，<a href="#def-message"><code>message</code></a>，<a href="./user.html#def-user"><code>user</code></a>。</p><h3 id="message-updated" tabindex="-1">message-updated <a class="header-anchor" href="#message-updated" aria-label="Permalink to &quot;message-updated&quot;">​</a></h3><p>当消息被编辑时触发。必需资源：<a href="./channel.html#def-channel"><code>channel</code></a>，<a href="#def-message"><code>message</code></a>，<a href="./user.html#def-user"><code>user</code></a>。</p><h3 id="message-deleted" tabindex="-1">message-deleted <a class="header-anchor" href="#message-deleted" aria-label="Permalink to &quot;message-deleted&quot;">​</a></h3><p>当消息被删除时触发。必需资源：<a href="./channel.html#def-channel"><code>channel</code></a>，<a href="#def-message"><code>message</code></a>，<a href="./user.html#def-user"><code>user</code></a>。</p>',10))])}const M=l(m,[["render",p]]);export{D as __pageData,M as default};
