import{_ as t,y as a,aa as s,j as i}from"./chunks/framework.CIYb0pjC.js";const k=JSON.parse('{"title":"Message Encoding","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/protocol/message.md","filePath":"en-US/protocol/message.md"}'),n={name:"en-US/protocol/message.md"};function l(o,e,h,r,d,c){return i(),a("div",null,e[0]||(e[0]=[s(`<h1 id="message-encoding" tabindex="-1">Message Encoding <a class="header-anchor" href="#message-encoding" aria-label="Permalink to &quot;Message Encoding&quot;">​</a></h1><p>Messages in Satori are encoded using <strong>Message Elements</strong>.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><p>The syntax of message elements is similar to XHTML but not identical.</p><h3 id="characters" tabindex="-1">Characters <a class="header-anchor" href="#characters" aria-label="Permalink to &quot;Characters&quot;">​</a></h3><p>You can use any character within message elements. However, some special characters need to be escaped:</p><table tabindex="0"><thead><tr><th style="text-align:center;">Original Character</th><th style="text-align:center;">Escaped Form</th></tr></thead><tbody><tr><td style="text-align:center;"><code>&quot;</code></td><td style="text-align:center;"><code>&amp;quot;</code></td></tr><tr><td style="text-align:center;"><code>&amp;</code></td><td style="text-align:center;"><code>&amp;amp;</code></td></tr><tr><td style="text-align:center;"><code>&lt;</code></td><td style="text-align:center;"><code>&amp;lt;</code></td></tr><tr><td style="text-align:center;"><code>&gt;</code></td><td style="text-align:center;"><code>&amp;gt;</code></td></tr></tbody></table><p>Depending on the context, some characters may not need to be escaped or may use different escape methods.</p><p>Additionally, you can escape any character using decimal or hexadecimal notation. For example, <code>&#39;</code> can also be written as <code>&amp;#39;</code> or <code>&amp;#x27;</code>.</p><h3 id="tags" tabindex="-1">Tags <a class="header-anchor" href="#tags" aria-label="Permalink to &quot;Tags&quot;">​</a></h3><p>A tag is formed by enclosing an element name in a pair of angle brackets, along with optional attributes and a closing indicator.</p><p>Element names consist of lowercase letters, numbers, and hyphens, and must start with a letter. Adding <code>/</code> before or after the element name indicates an end tag or a self-closing tag, while the absence of <code>/</code> indicates a start tag:</p><ul><li><code>&lt;tag&gt;</code>: A start tag</li><li><code>&lt;/tag&gt;</code>: An end tag</li><li><code>&lt;tag/&gt;</code>: A self-closing tag</li></ul><h3 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h3><p>The element name in a start or self-closing tag can be followed by an optional list of attributes. Each attribute must take one of the following forms:</p><ul><li><code>key</code></li><li><code>key=&quot;value&quot;</code> (where <code>&quot;</code> in <code>value</code> needs to be escaped)</li><li><code>key=&#39;value&#39;</code> (where <code>&#39;</code> in <code>value</code> needs to be escaped)</li></ul><p>Here is an example:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">tag</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> foo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> bar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre></div><h3 id="elements" tabindex="-1">Elements <a class="header-anchor" href="#elements" aria-label="Permalink to &quot;Elements&quot;">​</a></h3><p>An element is either a self-closing tag or consists of a pair of start and end tags with the same name. The content of an element refers to the part between the start and end tags, which can include text content or other elements. For self-closing tags, the content is empty. Here is an example:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  text content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">child</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>When unpaired elements exist, they are automatically treated as part of the text content. If there are continuous whitespace characters (including line breaks) before or after the text content, they will be ignored. This means the following two code snippets are equivalent:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">tag</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; bar</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- comment --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">tag</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">tag</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&amp;lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">foo</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&amp;gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> bar&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:inherit;">tag</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;Comments&quot;">​</a></h3><p>Use paired <code>&lt;!--</code> and <code>--&gt;</code> to insert a comment. The content within comments will not be rendered.</p><h2 id="standard-elements" tabindex="-1">Standard Elements <a class="header-anchor" href="#standard-elements" aria-label="Permalink to &quot;Standard Elements&quot;">​</a></h2><p>For the built-in message elements in Satori, please refer to Standard Elements.</p>`,28)]))}const g=t(n,[["render",l]]);export{k as __pageData,g as default};
