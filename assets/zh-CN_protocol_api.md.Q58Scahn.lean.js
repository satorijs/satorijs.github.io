import{_ as r,y as i,aa as a,p as d,X as t,z as s,l as c,R as l,j as n}from"./chunks/framework.CIYb0pjC.js";const x=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/protocol/api.md","filePath":"zh-CN/protocol/api.md"}'),p={name:"zh-CN/protocol/api.md"},h={id:"platform-features",tabindex:"-1"};function u(m,e,P,b,f,I){const o=l("badge");return n(),i("div",null,[e[4]||(e[4]=a(`<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h1><p>Satori 协议规定了一套基于 HTTP 的 API 服务，用于发送消息和调用其他功能。</p><h2 id="http-api" tabindex="-1">HTTP API <a class="header-anchor" href="#http-api" aria-label="Permalink to &quot;HTTP API&quot;">​</a></h2><p>这是一套 HTTP RPC 风格的 API，所有 URL 的形式均为 <code>/{path}/{version}/{resource}.{method}</code>。其中，<code>path</code> 为部署路径 (可以为空)，<code>version</code> 为 API 的版本号，<code>resource</code> 是资源类型，<code>method</code> 为方法名。</p><p>目前 Satori 仅有 v1 一个版本。</p><p>绝大多数 API 的请求都使用 <code>POST</code>，参数通过 <code>application/json</code> 编码在请求体中。返回值也是 JSON 格式。作为特例，<a href="./../advanced/resource.html#api-upload-create">文件上传</a> API 使用 <code>multipart/form-data</code> 编码。</p><p>请求头中需要包含 <code>Satori-Platform</code> 和 <code>Satori-User-ID</code> 字段，分别表示平台名称和平台账号。</p><p>一个合法的请求示例形如：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>POST /v1/channel.get</span></span>
<span class="line"><span>Content-Type: application/json</span></span>
<span class="line"><span>Authorization: Bearer 1234567890</span></span>
<span class="line"><span>Satori-Platform: discord</span></span>
<span class="line"><span>Satori-User-ID: 1234567890</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{&quot;channel_id&quot;: &quot;1234567890&quot;}</span></span></code></pre></div><h3 id="鉴权" tabindex="-1">鉴权 <a class="header-anchor" href="#鉴权" aria-label="Permalink to &quot;鉴权&quot;">​</a></h3><p>鉴权通过 HTTP API 中的 <code>Authorization</code> 请求头来实现。其中涉及的鉴权令牌由 SDK 分发，本协议不做任何限制。</p><p>如果 SDK 没有配置鉴权，则应用无需提供上述请求头。</p><h3 id="状态码" tabindex="-1">状态码 <a class="header-anchor" href="#状态码" aria-label="Permalink to &quot;状态码&quot;">​</a></h3><table tabindex="0"><thead><tr><th>状态码</th><th>描述</th></tr></thead><tbody><tr><td>200 (OK)</td><td>请求成功</td></tr><tr><td>400 (BAD REQUEST)</td><td>请求格式错误</td></tr><tr><td>401 (UNAUTHORIZED)</td><td>缺失鉴权</td></tr><tr><td>403 (FORBIDDEN)</td><td>权限不足</td></tr><tr><td>404 (NOT FOUND)</td><td>API 不存在</td></tr><tr><td>405 (METHOD NOT ALLOWED)</td><td>请求方法不支持</td></tr><tr><td>5XX (SERVER ERROR)</td><td>服务器错误</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果某个标准 API 没有被某个平台支持，则应该返回 404 (NOT FOUND) 而非 501 (NOT IMPLEMENTED)。只有当一个 API 被平台支持但是未被适配器实现时，才应该返回 501。</p></div>`,15)),d("h3",h,[e[1]||(e[1]=t("平台特性 ")),s(o,{type:"warning"},{default:c(()=>e[0]||(e[0]=[t("实验性")])),_:1}),e[2]||(e[2]=t()),e[3]||(e[3]=d("a",{class:"header-anchor",href:"#platform-features","aria-label":'Permalink to "平台特性 <badge type="warning">实验性</badge> {#platform-features}"'},"​",-1))]),e[5]||(e[5]=a('<p><a href="./../resources/login.html#def-login">Login</a> 对象中的 <code>features</code> 字段是一个字符串数组，用于表示平台的特性。这些特性可以用于判断平台是否支持某些 API。合法的平台特性包括：</p><ul><li>API 可用性，如特性 <code>message.delete</code> 表示支持使用 <a href="./../resources/message.html#api-message-delete"><code>message.delete</code></a> 撤回消息。</li><li>API 额外特性，如特性 <code>message.list.from</code> 表示使用 <a href="./../resources/message.html#api-message-create"><code>message.list</code></a> 查询消息列表时支持将消息 ID 作为分页令牌。</li><li>平台额外特性，如特性 <code>guild.plain</code> 表示该平台的群组内只能存在一个消息频道。</li></ul><p>目前仅有 API 名称本身是规范的用法。我们将在后续版本中提供更全面的标准特性列表。</p><h3 id="进阶-api" tabindex="-1">进阶 API <a class="header-anchor" href="#进阶-api" aria-label="Permalink to &quot;进阶 API&quot;">​</a></h3><p>除了标准 API 外，Satori 还提供了一些进阶功能。</p><ul><li><code>/{path}/{version}/proxy</code> 的子路由用于代理平台资源，请参见 <a href="./../advanced/resource.html#proxy-route">代理路由</a>。</li><li><code>/{path}/{version}/meta</code> 的子路由用于访问 SDK 相关接口，请参见 <a href="./../advanced/meta.html#api">元信息 API</a>。</li><li><code>/{path}/{version}/internal</code> 的子路由用于访问平台内部接口，请参见 <a href="./../advanced/internal.html#api">内部 API</a>。</li></ul><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><h3 id="list" tabindex="-1">分页列表 <a class="header-anchor" href="#list" aria-label="Permalink to &quot;分页列表 {#list}&quot;">​</a></h3><p>部分 API 可能会返回分页数据。这种情况下，响应会是一个 <code>List</code> 对象：</p><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>data</code></td><td>array</td><td>数据</td></tr><tr><td><code>next</code></td><td>string?</td><td>下一页的令牌</td></tr></tbody></table><p>你可以使用 <code>next</code> 令牌来获取下一页的数据。如果 <code>next</code> 为空，则表示没有更多数据了。</p><h3 id="bidi-list" tabindex="-1">双向分页列表 <a class="header-anchor" href="#bidi-list" aria-label="Permalink to &quot;双向分页列表 {#bidi-list}&quot;">​</a></h3><p>极少数 API 返回可双向延伸的分页数据。这种情况下，响应会是一个 <code>BidiList</code> 对象：</p><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>data</code></td><td>array</td><td>数据</td></tr><tr><td><code>prev</code></td><td>string?</td><td>上一页的令牌</td></tr><tr><td><code>next</code></td><td>string?</td><td>下一页的令牌</td></tr></tbody></table><p>在对应的 API 中，你可以通过 <code>direction</code> 和 <code>order</code> 参数来指定方向和排序。</p><p><code>direction</code> 参数有三种不同的取值：</p><ul><li><code>before</code>：向前获取数据，此时 <code>prev</code> 和 <code>next</code> 相同，均表示上一页的令牌。</li><li><code>after</code>：向后获取数据，此时 <code>prev</code> 和 <code>next</code> 相同，均表示下一页的令牌。</li><li><code>around</code>：向两侧获取数据，此时 <code>prev</code> 表示上一页的令牌，<code>next</code> 表示下一页的令牌。</li></ul><p>如果 <code>prev</code> 或 <code>next</code> 缺失，则表示在该方向上没有更多数据了。</p><p><code>order</code> 参数有两种不同的取值：</p><ul><li><code>asc</code>：升序排列。</li><li><code>desc</code>：降序排列。</li></ul>',20))])}const g=r(p,[["render",u]]);export{x as __pageData,g as default};
